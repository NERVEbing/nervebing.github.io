<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Go on LvLv&#39;s Blog.</title>
    <link>https://nervebing.github.io/tags/go/</link>
    <description>Recent content in Go on LvLv&#39;s Blog.</description>
    <image>
      <url>https://nervebing.github.io/</url>
      <link>https://nervebing.github.io/</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Feb 2019 13:34:06 +0800</lastBuildDate><atom:link href="https://nervebing.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>learning-go-from-zero-to-hero-part2</title>
      <link>https://nervebing.github.io/posts/2019-02-28-1/</link>
      <pubDate>Thu, 28 Feb 2019 13:34:06 +0800</pubDate>
      
      <guid>https://nervebing.github.io/posts/2019-02-28-1/</guid>
      <description>作者：Milap Neupane
链接：https://medium.freecodecamp.org/learning-go-from-zero-to-hero-d2a3223b3d86
 函数  main.go包中定义的func main()是执行程序的入口。可以定义和使用更多函数。让我们看一个简单的例子：
1 2 3 4 5 6 7 8  func add(a int, b int) int {  c := a + b  return c } func main() {  fmt.Println(add(2, 1)) } // 3    正如我们在上面的例子中所看到的，使用**func关键字后跟函数名来定义Go函数。函数所需的参数**需要根据其数据类型定义，最后是返回的数据类型。
 函数的返回也可以在函数中预定义：
1 2 3 4 5 6 7 8  func add(a int, b int) (c int) {  c = a + b  return } func main() {  fmt.</description>
    </item>
    
    <item>
      <title>learning-go-from-zero-to-hero-part1</title>
      <link>https://nervebing.github.io/posts/2019-02-22-1/</link>
      <pubDate>Fri, 22 Feb 2019 18:47:53 +0800</pubDate>
      
      <guid>https://nervebing.github.io/posts/2019-02-22-1/</guid>
      <description>作者：Milap Neupane
链接：https://medium.freecodecamp.org/learning-go-from-zero-to-hero-d2a3223b3d86
 开始  想到刚开始学习Go的时候，也是不清不楚地本着拿来能用就行的心态，没有系统学习，导致学习过程中踩坑无数。今天发现一篇文章写的很好，Go语言的特征讲得很细，翻译给需要的初学Go的同学。
前言  让我们从Go（或者称为Golang）的一个小介绍开始。Go由Google工程师Robert Griesemer，Rob Pike和Ken Thompson设计。它是一种静态类型的编译语言。第一个版本于2012年3月作为开源发布。
  “ Go是一种开源编程语言，可以轻松构建简单，可靠，高效的软件 ”
  在许多语言中，有许多方法可以解决给定的问题。程序员可以花很多时间思考解决问题的最佳方法。
 另一方面，Go相信更少的功能 — 只有一种正确的方法来解决问题。
 这节省了开发人员的时间，并使大型代码库易于维护。
  “ 功能越多，成本越高 ” — Rob Pike
 入门  Go由package组成。名为main的包告诉Go编译器被编译为可执行文件，而不是作为library被引用。它是应用程序的主入口。主包定义为：
1  package main    让我们在Go工作区中创建一个简单的hello world示例。
工作区  Go中的工作空间由环境变量定义，称为 GOPATH。
 你的任何代码都将写在工作区内。Go将搜索GOPATH目录中的任何包，或者GOROOT在安装Go时默认设置的目录。注：GOROOT 是安装go的路径。
 设置GOPATH为所需的目录。现在，让我们将其添加到文件夹中~/workspace。
1 2 3 4  # 定义GOPATH目录 export GOPATH=~/workspace # 进入工作区目录 cd ~/workspace    在我们刚刚创建的工作区文件夹中创建main.</description>
    </item>
    
  </channel>
</rss>
